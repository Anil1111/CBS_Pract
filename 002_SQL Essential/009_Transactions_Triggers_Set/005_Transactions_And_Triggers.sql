USE MyFunkDB	-- Внимательно при удалении/добавлении строк - т.к. далее будут комментарии, которые ссылаются на номера строк (тогда менять также и комментарии).
GO

SELECT * FROM Employees
SELECT * FROM PersonalInfo
SELECT * FROM SalaryAndPosition
GO

--1) Проверка триггеров на таблице Employees-------------------------------------------------------------------------------------------------------------------------------
BEGIN TRANSACTION
INSERT Employees
VALUES
('Андрей','Никифоров','(050)5554466'),	--если в следующей строке ошибка, то при откате будет удалена и эта правильная строка, т.к. не было коммита между ней и ошибкой в следующей строке.
('Максим','Фёдоров','(044)5665544')
COMMIT TRANSACTION
GO

-------------------------------------Вставка дополнителных записей в Employees - чтобы показать работу триггера--
-- Для начала проверим работу внешнего ключа, из-за которого нельзя удалять записи:
DELETE Employees WHERE LName = 'Del Villiar'	-- Ошибка. Ссылается внешний ключ.
GO

DBCC CHECKIDENT("Employees",RESEED,10); -- обновление значения IDENTITY = 10 (Можно было бы задать в триггере проверку и сброс IDENTITY в нужное значение как показано примерах к уроку, но, к сожалению не хватило времени исправлять уже написанный код...)

INSERT Employees
VALUES
('Фёдор','Лиллипутов','(050)5994466'),
('Максим','Гуливеров','(093)5454566')
GO

------------------------------------------------------------------------------------------------------------------Демонстрация работы триггера.
BEGIN TRANSACTION 
INSERT Employees
VALUES
('Андрей','Никифоров','(050)5554466')	-- будет откат и этой записи, т.к. следующая команда вызовет ошибку.

DELETE Employees WHERE LName = 'Лиллипутов' -- НЕЛЬЗЯ УДАЛЯТЬ ТАКОГО
COMMIT TRANSACTION
GO

--2) Проверка триггеров на таблице PersonalInfo-------------------------------------------------------------------------------------------------------------------------------
DBCC CHECKIDENT("Employees",RESEED,12)
GO

BEGIN TRANSACTION 
INSERT Employees
VALUES
('Богдан','Феоктистов','(093)1122366') -- будет откат из-за ошибки на 52-й строке далее.

INSERT PersonalInfo
VALUES
(13,'Не женат','1995-02-01','Лётчиков, 5') -- НЕДОСТАТОЧНЫЙ ВОЗРАСТ
COMMIT TRANSACTION
GO

SELECT * FROM Employees
GO

-- Автоматически выставляем нужное значение IDENTITY в таблице Employees - т.е. равное максимальному внесенному в таблицу.
DBCC CHECKIDENT("Employees",RESEED,0)
DBCC CHECKIDENT("Employees",RESEED)
GO

BEGIN TRANSACTION
INSERT Employees
VALUES
('Карлос','Хамес','(098)1777366')	-- а этот внесётся, т.к. далее есть точка сохранения.

SAVE TRAN SavePointEmployeeTableIsDone	--точка сохранения

INSERT PersonalInfo
VALUES
(13,'Женат','1985-02-01','Петренко, 88') -- УЛИЦА НЕ ТА. Строка не внесётся, но Карлос Хамес - внесётся.
COMMIT TRANSACTION
GO

SELECT * FROM Employees
SELECT * FROM PersonalInfo SELECT * FROM SalaryAndPosition
GO

---Довнесение дополнительной информации о Максиме Гуливерове (его потом и будем удалять)-------------
---(для проверки работы триггера на таблице PersonalInfo)--------------------------------------------
---И о Лиллипутове-----------------------------------------------------------------------------------
INSERT PersonalInfo
VALUES
(11,'Женат','1980-03-02','Василенко, 50') --Лиллипутов (для полноты)
GO
INSERT SalaryAndPosition
VALUES
(11,600,'Менеджер')						--Лиллипутов
INSERT PersonalInfo
VALUES
(12,'Женат','1979-04-12','Коновалова, 32') --Гуливеров
GO
INSERT SalaryAndPosition
VALUES
(12,150,'Рабочий')						--Гуливеров
GO
-----------------------------------------------------------------------------------------------------
-- Автоматически выставляем нужное значение IDENTITY в таблице Employees...
DBCC CHECKIDENT("Employees",RESEED,0)
DBCC CHECKIDENT("Employees",RESEED)
GO

BEGIN TRANSACTION
INSERT PersonalInfo
VALUES
(13,'Женат','1977-06-11','Набережная, 3') --Хамеса довносим в PersonalInfo
INSERT SalaryAndPosition
VALUES
(13,600,'Менеджер')						--Хамеса довносим в SalaryAndPosition
INSERT Employees
VALUES
('Николай','Пивоваров','(097)5655655') -- Новый сотрудник в Employees - Пивоваров
INSERT PersonalInfo
VALUES
(14,'Женат','1977-05-05','Красноармейская, 7')	-- Пивоварова довносим в PersonalInfo
INSERT SalaryAndPosition
VALUES
(14,150,'Рабочий')		-- Пивоварова довносим в SalaryAndPosition

SAVE TRAN SavePointPersonalInfoTableIsDone

DELETE PersonalInfo WHERE EmployeeID = 12	-- ПОПЫТКА УДАЛИТЬ ГУЛИВЕРОВА	- неудачано, т.к. срабатывает триггер запрещающий удалять сотрудников непенсионного возраста.
DELETE SalaryAndPosition WHERE EmployeeID = 12								-- дальше наблюдается ситуация, которую я ещё не понял: на предыдущей строке транзакция должна была прекратиться, а действие последней команды - отменено, т.к. из-за неё сработал триггер, а в нём сработала команда ROLLBACK. Последнее действие было действительно отменено, но ТРАНЗАКЦИЯ продолжила своё выполнение со 125 строки! Т.е. ROLLBACK не означает полного окончания транзакции, он только делает "перемотку" назад с отменой всех действий с места команды ROLLBACK и до точки сохранения, либо до начала транзакции (если точки сохранения не было). Если в цепочке дальнейших команд, стоящих после команды, вызвавшей триггер, внутри той же транзакции какая-то команда снова вызывает, допустим, тот же самый триггер, который должен опять всё вернуть к той же самой точке сохранения, то в этом случае сервер почему-то уже не находит эту точку сохранения и откатывает всё, что было сделано, начиная с самого начала транзакции. При этом пишет ошибку, что не нашёл точку сохранения... Но почему 128 строка не выполнилась (если я правильно заметил) - пока загадка... Копаться здесь уже не стал, и так уже много времени потратил.. 
SAVE TRAN SavePointPersonalInfoTableIsDone	-- (вот где собака зарыта! - поэтому и 128 строка не выполнялась (эту строку дописал позже, чтоб убрать ошибку). - Ошибка была потому что 127-я строка, не найдя точки сохранения, которая уже была использована один раз, откатывала всю транзакцию до самого начала. Дальше вся операция останавливалась и 128-я строака просто не выполнялась. А теперь всё работает.)
DELETE PersonalInfo WHERE EmployeeID = 11	-- ПОПЫТКА УДАЛИТЬ ЛИЛЛИПУТОВА	- он тоже непенсионного возраста.
DELETE SalaryAndPosition WHERE EmployeeID = 11
COMMIT TRANSACTION
GO

--3) Проверка работы триггеров для таблицы SalaryAndPosition-------------------------------------------------------------------------------------------------------------------------------
DBCC CHECKIDENT("Employees",RESEED,14) --на всякий случай (хотя можно прописать и полный сброс)
GO

BEGIN TRANSACTION
INSERT Employees
VALUES
('Андрей','Никифоров','(050)5554466')
INSERT PersonalInfo
VALUES
(15,'Не Женат','1986-05-05','Дзержинского, 17')

SAVE TRAN SavePointPersonalInfoIsDone

INSERT SalaryAndPosition
VALUES
(15,1501,'Менеджер') -- слишком большая з/п
COMMIT TRANSACTION
GO

BEGIN TRANSACTION
INSERT SalaryAndPosition
VALUES
(15,600,'Менеджер')

SAVE TRAN SavePointPersonalInfoIsDone

DELETE SalaryAndPosition WHERE EmployeeID = 1	-- нельзя удалять Генерального директора.

COMMIT TRANSACTION
GO