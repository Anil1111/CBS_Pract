--------------- HR Department Advanced. Normalizations.----------------------
--------------- Немного поправил таблицы, упростил по сравнению с изначальным вариантом --------------------
-- в котором я строил их так, чтобы испробовать все Нормальные Формы. Здесь я просто строю таблицу ---------
-- и нормализую её. Если после действий получилось так, что таблица оказалась уже в одной из нормальных ----
-- форм и специальных действий не нужно, то двигаюсь дальше, не переделывая заново все данные чтоб можно ---
-- было опробовать обязательно все НФ. Кроме того немного исправил содержание таблиц, т.к. некоторые -------
-- сочетания сотрудников HR и сотрудников компании были странными и нелогичными, что только всё усложняло. -

CREATE DATABASE HRDeptAdv
ON
(
	NAME = 'HRDeptAdv',
	FILENAME = 'd:\Program Files (x86)\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\HRDeptAdv.mdf',
	SIZE = 5 MB,
	MAXSIZE = 10 MB,
	FILEGROWTH = 5%
)
LOG ON
(
	NAME = 'LogHRDeptAdv',
	FILENAME = 'd:\Program Files (x86)\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\HRDeptAdv_Log.ldf',
	SIZE = 2 MB,
	MAXSIZE = 5 MB,
	FILEGROWTH = 2%
)
GO

EXEC sp_helpdb HRDeptAdv
GO

----------------------------------------------------------------
--					INITIAL DATA (COMMON TABLE)
----------------------------------------------------------------

USE HRDeptAdv
GO

DROP TABLE HRDept

CREATE TABLE HRDept
(
	ManagerId int NOT NULL,
	ManagerName varchar (40) NOT NULL,
	ManagerPosition varchar (20) NOT NULL,
	Salary SmallMoney NOT NULL,
	EmployeeId int NOT NULL,
	EmpName varchar (40) NOT NULL,
	Address1 varchar (70) NOT NULL,
	EmpSalary SmallMoney NOT NULL,
	Department varchar (30) NOT NULL,
	Position varchar (80) NOT NULL,
	HireDate date NOT NULL,
	DismissalDate date NULL,
	Vacations varchar (100) NOT NULL,
	Premium as Salary*0.25,
	Phone varchar (12) NOT NULL,
	Activity varchar (40) NOT NULL,
		CHECK (Phone LIKE '([0-9][0-9][0-9])[0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
)
GO

EXEC sp_help HRDept
GO

SELECT * FROM HRDept
GO

INSERT HRDept
VALUES
(55, 'Иван Петрович Поляков', 'Специалист', 500, 123,'Дмитрий Алексеевич Васильев','Красноармейская 10, Ивано-Франковск', 500, 'Плановый', 'Специалист','2007-04-04', NULL,'25, 14', '(093)7984565','Плановая деятельность'),
(66, 'Анатолий Игоревич Петров', 'Старший Специалист', 600, 124,'Зигмунд Фёдорович Унакий','Петренко 2, Комсомольск-на-Амуре', 540, 'Отдел Сбыта', 'Специалист','2009-08-15', NULL,'14, 7, 10, 5', '(050)9875454','Сбыт'),
(55, 'Иван Петрович Поляков', 'Специалист', 500, 156,'Дункан Иванович Маклауд','Ленина 6, Ивано-Франковск', 700, 'Бухгалтерия', 'Заместитель Главного Бухгалтера','2011-06-07', NULL,'5, 10', '(097)1234545','Бухгалтерский учёт'),
(66, 'Анатолий Игоревич Петров', 'Старший Специалист', 600, 177,'Абдул Узейир Хусейнзаде','Октябрьская 65, Санкт-Петербург', 800, 'Центр поддержки', 'Заместитель Начальника','2013-11-04', NULL,'20, 10', '(063)5765564','Сопровождение продаж'),
(77, 'Елена Валерьевна Шмякина', 'Заместитель', 900, 167,'Александр Николаевич Бондарев','Московский Проспект 7, Ужгород', 750, 'Бухгалтерия', 'Старший бухгалтер','2012-07-08', NULL,'8, 19', '(097)1234546','Бухгалтерский учёт'),
(88, 'Ольга Петровна Пельтцер', 'Начальник', 1000, 125,'Акакий Николаевич Шевцов','Комсомольская 4, Львов', 500, 'Плановый', 'Специалист','2008-05-05', NULL,'10, 15', '(093)7984567','Плановая деятельность'),
(88, 'Ольга Петровна Пельтцер', 'Начальник', 1000, 178,'Мустафа Алибабаевич Рахман','Петропавловская 56, Москва', 800, 'Центр поддержки', 'Начальник','2012-12-05', NULL,'14, 11', '(063)5765565','Сопровождение продаж')
GO

SELECT * FROM HRDept
GO

----------------------------------------------------------------
--					1-ST NORMAL FORM
----------------------------------------------------------------

-- Исключаем повторяющиеся данные. Логически в таблице содержится 3 группы данных - сотрудники HR, сотрудники компании, данные об отпусках и о том какие HR-ы всё это ведут.
-- Выделяем 2 таблицы: HRManagers, Employees. 
-- В таблице HRDept остаются данные об отпусках и кто из HR-в каких ведёт сотрудников.
-- Соответственно во всех 3-х таблицах создаём необходимые ссылки друг на друга, т.е. Внешние и Первичные ключи.

DROP TABLE HRDept
DROP TABLE HRManagers
DROP TABLE Employees
GO

CREATE TABLE HRManagers
(	
	ManagerId int NOT NULL
		PRIMARY KEY,
	ManagerName varchar (40) NOT NULL,
	ManagerPosition varchar (20) NOT NULL
	-- Salary SmallMoney NOT NULL	- зачем оно? Убрал.
)
GO

CREATE TABLE Employees
(
	EmployeeId int NOT NULL
		PRIMARY KEY,
	EmpName varchar (40) NOT NULL,
	[Address] varchar (70) NOT NULL,
	Salary SmallMoney NOT NULL,
	Department varchar (30) NOT NULL,
	Position varchar (80) NOT NULL,
	HireDate date NOT NULL,
	DismissalDate date NULL,
	Premium as Salary*0.25,
	Phone varchar (12) NOT NULL,
	Activity varchar (40) NOT NULL,
		CHECK (Phone LIKE '([0-9][0-9][0-9])[0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
)
GO

CREATE TABLE HRDept
(
	ManagerId int NOT NULL
		FOREIGN KEY REFERENCES HRManagers (ManagerId),
	EmployeeId int NOT NULL
		FOREIGN KEY REFERENCES Employees (EmployeeId),
	Vacations varchar (100) NOT NULL,
		PRIMARY KEY (ManagerId, EmployeeId)
)
GO

INSERT HRManagers
VALUES
(55, 'Иван Петрович Поляков', 'Специалист'),
(66, 'Анатолий Игоревич Петров', 'Старший Специалист'),
(77, 'Елена Валерьевна Шмякина', 'Заместитель'),
(88, 'Ольга Петровна Пельтцер', 'Начальник')
GO

INSERT Employees
VALUES
(123, 'Дмитрий Алексеевич Васильев','Красноармейская 10, Ивано-Франковск', 500, 'Плановый', 'Специалист','2007-04-04', NULL, '(093)7984565', 'Плановая деятельность'),
(124, 'Зигмунд Фёдорович Унакий','Петренко 2, Комсомольск-на-Амуре', 540, 'Отдел Сбыта', 'Специалист','2009-08-15', NULL,'(050)9875454','Сбыт'),
(156, 'Дункан Иванович Маклауд','Ленина 6, Ивано-Франковск', 700, 'Бухгалтерия', 'Заместитель Главного Бухгалтера','2011-06-07', NULL, '(097)1234545','Бухгалтерский учёт'),
(177, 'Абдул Узейир Хусейнзаде','Октябрьская 65, Санкт-Петербург', 800, 'Центр поддержки', 'Заместитель Начальника','2013-11-04', NULL,'(063)5765564','Сопровождение продаж'),
(167, 'Александр Николаевич Бондарев','Московский Проспект 7, Ужгород', 750, 'Бухгалтерия', 'Старший бухгалтер','2012-07-08', NULL,'(097)1234546','Бухгалтерский учёт'),
(125, 'Акакий Николаевич Шевцов','Комсомольская 4, Львов', 500, 'Плановый', 'Специалист','2008-05-05', NULL,'(093)7984567','Плановая деятельность'),
(178, 'Мустафа Алибабаевич Рахман','Петропавловская 56, Москва', 800, 'Центр поддержки', 'Начальник','2012-12-05', NULL,'(063)5765565','Сопровождение продаж')
GO

INSERT HRDept
VALUES
(55, 123,'25, 14'),
(66, 124,'14, 7, 10, 5'),
(55, 156,'5, 10'),
(66, 178,'20, 10'),
(77, 167,'8, 19'),
(88, 125,'10, 15'),
(88, 178,'14, 11')
GO

SELECT * FROM HRManagers
SELECT * FROM Employees
SELECT * FROM HRDept
GO

-- создаём атомарные данные во всех таблицах (поля, в которых хранится сразу несколько значений, разбиваем на несколько столбцов или строк - в зависимости от содержимого)

DROP TABLE HRDept
DROP TABLE HRManagers
DROP TABLE Employees
GO

CREATE TABLE HRManagers
(	
	ManagerId int NOT NULL
		PRIMARY KEY,
	ManagerFName varchar (40) NOT NULL,		-- Разбиение поля на 3 столбца (Имя, Отчество, Фамилия)		// ... в принципе, в этом нет необходимости :)
	ManagerMName varchar (40) NOT NULL,
	ManagerLName varchar (40) NOT NULL,
	ManagerPosition varchar (20) NOT NULL
)
GO

CREATE TABLE Employees
(
	EmployeeId int NOT NULL
		PRIMARY KEY,
	EmpFName varchar (40) NOT NULL,		-- Разбиение поля на 3 столбца (Имя, Отчество, Фамилия)
	EmpMName varchar (40) NOT NULL,
	EmpLName varchar (40) NOT NULL,
	[Address] varchar (70) NOT NULL,
	Salary SmallMoney NOT NULL,
	Department varchar (30) NOT NULL,
	Position varchar (80) NOT NULL,
	HireDate date NOT NULL,
	DismissalDate date NULL,
	Premium as Salary*0.25,
	Phone varchar (12) NOT NULL,
	Activity varchar (40) NOT NULL,
		CHECK (Phone LIKE '([0-9][0-9][0-9])[0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
)
GO

CREATE TABLE HRDept
(
	ManagerId int NOT NULL
		FOREIGN KEY REFERENCES HRManagers (ManagerId),
	EmployeeId int NOT NULL
		FOREIGN KEY REFERENCES Employees (EmployeeId),
	Vacations varchar (100) NOT NULL	-- В поле Vacations раньше хранилось несколько значений (количество дней за каждый из предыдущих отпусков) - каждое отдельное значение будет вноситься в новой строке.
		-- PRIMARY KEY (ManagerId, EmployeeId) -- больше не является первичным ключём, т.к. значения первичного ключа будут повторяться.
)
GO

INSERT HRManagers
VALUES
(55, 'Иван', 'Петрович', 'Поляков', 'Специалист'),
(66, 'Анатолий', 'Игоревич', 'Петров', 'Старший Специалист'),
(77, 'Елена', 'Валерьевна', 'Шмякина', 'Заместитель'),
(88, 'Ольга', 'Петровна', 'Пельтцер', 'Начальник')
GO

INSERT Employees
VALUES
(123, 'Дмитрий', 'Алексеевич', 'Васильев','Красноармейская 10, Ивано-Франковск', 500, 'Плановый', 'Специалист','2007-04-04', NULL, '(093)7984565', 'Плановая деятельность'),
(124, 'Зигмунд', 'Фёдорович', 'Унакий','Петренко 2, Комсомольск-на-Амуре', 540, 'Отдел Сбыта', 'Специалист','2009-08-15', NULL,'(050)9875454','Сбыт'),
(156, 'Дункан', 'Иванович', 'Маклауд','Ленина 6, Ивано-Франковск', 700, 'Бухгалтерия', 'Заместитель Главного Бухгалтера','2011-06-07', NULL, '(097)1234545','Бухгалтерский учёт'),
(177, 'Абдул', 'Узейир', 'Хусейнзаде','Октябрьская 65, Санкт-Петербург', 800, 'Центр поддержки', 'Заместитель Начальника','2013-11-04', NULL,'(063)5765564','Сопровождение продаж'),
(167, 'Александр', 'Николаевич', 'Бондарев','Московский Проспект 7, Ужгород', 750, 'Бухгалтерия', 'Старший бухгалтер','2012-07-08', NULL,'(097)1234546','Бухгалтерский учёт'),
(125, 'Акакий', 'Николаевич', 'Шевцов','Комсомольская 4, Львов', 500, 'Плановый', 'Специалист','2008-05-05', NULL,'(093)7984567','Плановая деятельность'),
(178, 'Мустафа', 'Алибабаевич', 'Рахман','Петропавловская 56, Москва', 800, 'Центр поддержки', 'Начальник','2012-12-05', NULL,'(063)5765565','Сопровождение продаж')
GO

INSERT HRDept
VALUES
(55, 123,'25'),
(55, 123,'14'),
(66, 124,'14'),
(66, 124,'7'),
(66, 124,'10'),
(66, 124,'5'),
(55, 156,'5'),
(55, 156,'10'),
(66, 178,'20'),
(66, 178,'10'),
(77, 167,'8'),
(77, 167,'19'),
(88, 125,'10'),
(88, 125,'15'),
(88, 178,'14'),
(88, 178,'11')
GO

SELECT * FROM HRManagers
SELECT * FROM Employees
SELECT * FROM HRDept
GO

----------------------------------------------------------------
--					2-ND NORMAL FORM
----------------------------------------------------------------

-- Добавляем первичный ключ (составной) в таблицу HRDept. Для этого вносим дополнительный столбец EntryLine.

DROP TABLE HRDept
GO

CREATE TABLE HRDept
(
	ManagerId int NOT NULL
		FOREIGN KEY REFERENCES HRManagers (ManagerId),
	EmployeeId int NOT NULL
		FOREIGN KEY REFERENCES Employees (EmployeeId),
	EntryLine int NOT NULL,
	Vacations varchar (100) NOT NULL,
		PRIMARY KEY (EntryLine, ManagerId, EmployeeId) -- (Вывод таблицы будет отсортирован по 1-му столбцу, указанному в скобках)
)
GO

INSERT HRDept
VALUES
(55, 123, 1, '25'),
(55, 123, 2, '14'),
(66, 124, 3, '14'),
(66, 124, 4, '7'),
(66, 124, 5, '10'),
(66, 124, 6, '5'),
(55, 156, 7, '5'),
(55, 156, 8, '10'),
(66, 178, 9, '20'),
(66, 178, 10, '10'),
(77, 167, 11, '8'),
(77, 167, 12, '19'),
(88, 125, 13, '10'),
(88, 125, 14, '15'),
(88, 178, 15, '14'),
(88, 178, 16, '11')
GO

SELECT * FROM HRManagers
SELECT * FROM Employees
SELECT * FROM HRDept
GO

-- Условие "Каждый не ключевой столбец, находящийся в 1НФ, должен зависеть от всего ключа" - выполняется во всех таблицах.

----------------------------------------------------------------
--					  3-RD NORMAL FORM						  --
----------------------------------------------------------------

-- Заменяем производные столбцы столбцами с обычными данными: столбец Premium в таблице Employee.

DROP TABLE HRDept
DROP TABLE Employees
GO

CREATE TABLE Employees
(
	EmployeeId int NOT NULL
		PRIMARY KEY,
	EmpFName varchar (40) NOT NULL,	
	EmpMName varchar (40),
	EmpLName varchar (40) NOT NULL,
	[Address] varchar (70) NOT NULL,
	Salary SmallMoney NOT NULL,
	Department varchar (30) NOT NULL,
	Position varchar (80) NOT NULL,
	HireDate date NOT NULL,
	DismissalDate date,
	Premium Money,				--// больше не производный столбец
	Phone varchar (12) NOT NULL,
	Activity varchar (40) NOT NULL,
		CHECK (Phone LIKE '([0-9][0-9][0-9])[0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
)
GO

CREATE TABLE HRDept
(
	ManagerId int NOT NULL
		FOREIGN KEY REFERENCES HRManagers (ManagerId),
	EmployeeId int NOT NULL
		FOREIGN KEY REFERENCES Employees (EmployeeId),
	EntryLine int NOT NULL,
	Vacations varchar (100) NOT NULL,
		PRIMARY KEY (EntryLine, ManagerId, EmployeeId) -- (Вывод таблицы будет отсортирован по 1-му столбцу, указанному в скобках)
)
GO

INSERT Employees
VALUES
(123, 'Дмитрий', 'Алексеевич', 'Васильев','Красноармейская 10, Ивано-Франковск', 500, 'Плановый', 'Специалист','2007-04-04', NULL, 125, '(093)7984565', 'Плановая деятельность'),
(124, 'Зигмунд', 'Фёдорович', 'Унакий','Петренко 2, Комсомольск-на-Амуре', 540, 'Отдел Сбыта', 'Специалист','2009-08-15', NULL, 135,'(050)9875454','Сбыт'),
(156, 'Дункан', 'Иванович', 'Маклауд','Ленина 6, Ивано-Франковск', 700, 'Бухгалтерия', 'Заместитель Главного Бухгалтера','2011-06-07', NULL, 175, '(097)1234545','Бухгалтерский учёт'),
(177, 'Абдул', 'Узейир', 'Хусейнзаде','Октябрьская 65, Санкт-Петербург', 800, 'Центр поддержки', 'Заместитель Начальника','2013-11-04', NULL, 200,'(063)5765564','Сопровождение продаж'),
(167, 'Александр', 'Николаевич', 'Бондарев','Московский Проспект 7, Ужгород', 750, 'Бухгалтерия', 'Старший бухгалтер','2012-07-08', NULL, 187.25,'(097)1234546','Бухгалтерский учёт'),
(125, 'Акакий', 'Николаевич', 'Шевцов','Комсомольская 4, Львов', 500, 'Плановый', 'Специалист','2008-05-05', NULL, 125,'(093)7984567','Плановая деятельность'),
(178, 'Мустафа', 'Алибабаевич', 'Рахман','Петропавловская 56, Москва', 800, 'Центр поддержки', 'Начальник','2012-12-05', NULL, 200,'(063)5765565','Сопровождение продаж')
GO

INSERT HRDept
VALUES
(55, 123, 1, '25'),
(55, 123, 2, '14'),
(66, 124, 3, '14'),
(66, 124, 4, '7'),
(66, 124, 5, '10'),
(66, 124, 6, '5'),
(55, 156, 7, '5'),
(55, 156, 8, '10'),
(66, 178, 9, '20'),
(66, 178, 10, '10'),
(77, 167, 11, '8'),
(77, 167, 12, '19'),
(88, 125, 13, '10'),
(88, 125, 14, '15'),
(88, 178, 15, '14'),
(88, 178, 16, '11')
GO

SELECT * FROM HRManagers
SELECT * FROM Employees
SELECT * FROM HRDept
GO

-- Требование 3НФ "любой не ключевой столбец не должен зависить от другого не ключевого столбца" выполняется во всех таблицах.